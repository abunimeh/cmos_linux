### generated by Jinja2 template, used by prun
{%-for ced_key, ced_value in CED|dictsort%}
{{ced_key}} = {{ced_value}}
{%-endfor%}

{%-for ed_key, ed_value in ed|dictsort%}
{{ed_key}} = {{ed_value}}
{%-endfor%}

dir_guard = @mkdir -p ${@D}
cd_guard = @cd ${@D}
clean_db = @rm -rf ${OUTPUT_SIMV}/{{simv_dic.name}}/work.lib++ ${OUTPUT_SIMV}/{{simv_dic.name}}/AN.DB

MAKEFLAGS += --silent

### simv targets
${OUTPUT_SIMV}/{{simv_dic.name}}/dut.flist: \
{%-for dut_file in simv_dic.dut_file_lst%}
{{dut_file}} \
{%-endfor%}
${OUTPUT_SIMV}/{{simv_dic.name}}/simv_dutfl.pcl
	${dir_guard}
{%-if not simv_dic.dut_file_lst%}
	@echo > $@
{%-endif%}
{%-for dut_file in simv_dic.dut_file_lst%}
{%-if loop.first%}
	@echo {{dut_file}} > $@
{%-else%}
	@echo {{dut_file}} >> $@
{%-endif%}
{%-endfor%}
{%-for dut_dir in simv_dic.dut_dir_lst%}
	@echo {{dut_dir}} >> $@
{%-endfor%}

${OUTPUT_SIMV}/{{simv_dic.name}}/tb.flist: \
{%-for tb_file in simv_dic.tb_file_lst%}
{{tb_file}} \
{%-endfor%}
{%-for tb_file in simv_dic.tb_dep_file_lst%}
{{tb_file}} \
{%-endfor%}
${OUTPUT_SIMV}/{{simv_dic.name}}/simv_tbfl.pcl
	${dir_guard}
{%-if not simv_dic.tb_file_lst%}
	@echo > $@
{%-endif%}
{%-for tb_file in simv_dic.tb_file_lst%}
{%-if loop.first%}
	@echo {{tb_file}} > $@
{%-else%}
	@echo {{tb_file}} >> $@
{%-endif%}
{%-endfor%}
{%-for tb_dir in simv_dic.tb_dir_lst%}
	@echo {{tb_dir}} >> $@
{%-endfor%}

${OUTPUT_SIMV}/{{simv_dic.name}}/.dut_ana: \
${OUTPUT_SIMV}/{{simv_dic.name}}/dut.flist \
${OUTPUT_CLIB}/c_cfg.json \
${OUTPUT_SIMV}/{{simv_dic.name}}/simv_cfg.json \
${SHARE_CONFIG}/proj.cfg
	${clean_db}
	${cd_guard} && \
	{{simv_dic.ana_tool}} \
	{{simv_dic.da_opts}} \
{%-if simv_dic.cda_opts%}
	{{simv_dic.cda_opts}} \
{%-endif%}
	-f $< \
	-l ${OUTPUT_SIMV}/{{simv_dic.name}}/dut_ana.log && \
	touch $@

${OUTPUT_SIMV}/{{simv_dic.name}}/.tb_ana: \
${OUTPUT_SIMV}/{{simv_dic.name}}/tb.flist \
${OUTPUT_CLIB}/c_cfg.json \
${OUTPUT_SIMV}/{{simv_dic.name}}/simv_cfg.json \
${SHARE_CONFIG}/proj.cfg
	${cd_guard} && \
	{{simv_dic.ana_tool}} \
	{{simv_dic.ta_opts}} \
{%-if simv_dic.cta_opts%}
	{{simv_dic.cta_opts}} \
{%-endif%}
	-f $< \
	-l ${OUTPUT_SIMV}/{{simv_dic.name}}/tb_ana.log && \
	touch $@

{%for file_name, file_line_lst in simv_dic.file_dic|dictsort%}
${OUTPUT_SIMV}/{{simv_dic.name}}/{{file_name}}: \
${OUTPUT_SIMV}/{{simv_dic.name}}/simv_cfg.json \
${SHARE_CONFIG}/proj.cfg
	${dir_guard}
{%-for file_line in file_line_lst%}
{%-if loop.first%}
	@echo '{{file_line}}' > $@
{%-else%}
	@echo '{{file_line}}' >> $@
{%-endif%}
{%-endfor%}
{%endfor%}

${OUTPUT_SIMV}/{{simv_dic.name}}/simv: \
{%-for file_name, file_cont in simv_dic.file_dic|dictsort%}
${OUTPUT_SIMV}/{{simv_dic.name}}/{{file_name}} \
{%-endfor%}
${OUTPUT_SIMV}/{{simv_dic.name}}/.dut_ana \
${OUTPUT_SIMV}/{{simv_dic.name}}/.tb_ana
{%-if clib_flg%}
	@cd ${MODULE_OUTPUT} && make -f Makefile compile_clib
{%-endif%}
	${cd_guard} && \
{%-for pre_cmd in simv_dic.pre_cmd_lst%}
	{{pre_cmd}} && \
{%-endfor%}
	{{simv_dic.elab_tool}} \
	{{simv_dic.e_opts}} \
{%-if simv_dic.ce_opts%}
	{{simv_dic.ce_opts}} \
{%-endif%}
	-top {{simv_dic.tb_top}} \
{%-if simv_dic.upf_flg%}
	-power_top {{simv_dic.power_top}} \
{%-endif%}
{%-if clib_flg%}
	-LDFLAGS -L${OUTPUT_CLIB} -l${MODULE} \
{%-endif%}
	-l ${OUTPUT_SIMV}/{{simv_dic.name}}/elab.log \
	-o $@
{%-for post_cmd in simv_dic.post_cmd_lst-%}
	{{' '}}&& \
	{{post_cmd}}
{%-endfor%}

.PHONY: verdi_{{simv_dic.name}}
verdi_{{simv_dic.name}}: ${OUTPUT_SIMV}/{{simv_dic.name}}/.dut_ana
	cd ${OUTPUT_SIMV}/{{simv_dic.name}} && \
	verdi {{simv_dic.w_opts}} -simflow -lib work -nologo &
