### generated by Jinja2 template, used by prun
{%-for ced_key, ced_value in CED|dictsort%}
{{ced_key}} = {{ced_value}}
{%-endfor%}

{%-for ed_key, ed_value in ed|dictsort%}
{{ed_key}} = {{ed_value}}
{%-endfor%}

dir_guard = @mkdir -p ${@D}
cd_guard = @cd ${@D}

MAKEFLAGS += --silent

### simv targets
.PHONY: ${OUTPUT_SIMV}/{{case_dic.simv}}/simv
${OUTPUT_SIMV}/{{case_dic.simv}}/simv:
	${cd_guard} && make -f simv_makefile $@

### case targets
.PHONY: run_simv_{{case_dic.name}}__{{case_dic.seed}}
run_simv_{{case_dic.name}}__{{case_dic.seed}}: \
${OUTPUT_SIMV}/{{case_dic.simv}}/simv \
{%-for file_name, file_cont in case_dic.file_dic|dictsort%}
${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}}/{{file_name}} \
{%-endfor%}
${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}}/{{case_dic.name}}.tcl
{%-if clib_flg%}
	export LD_LIBRARY_PATH=${OUTPUT_CLIB}:${LD_LIBRARY_PATH} && \
{%-endif%}
{%-for pre_cmd in case_dic.pre_cmd_lst%}
	{{pre_cmd}} && \
{%-endfor%}
	mkdir -p ${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}} && \
	cd ${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}} && \
	$< \
	+TEMPDIR=${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}} \
	{{case_dic.su_opts}} \
	-l ${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}}/{{case_dic.seed}}.log \
	-ucli -i ${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}}/{{case_dic.name}}.tcl
{%-for post_cmd in case_dic.post_cmd_lst-%}
	{{' '}}&& \
	{{post_cmd}}
{%-endfor%}

.PHONY: ${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}}/{{case_dic.name}}.tcl
${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}}/{{case_dic.name}}.tcl:
	${dir_guard}
	@echo > $@
{%-if case_dic.wave%}
{%-if case_dic.wave_format == 'fsdb'%}
	@echo fsdbDumpfile {{case_dic.name}}__{{case_dic.seed}}.fsdb >> $@
	@echo fsdbDumpvars 0 {{case_dic.tb_top}} >> $@
{%-if case_dic.wave_mem%}
	@echo fsdbDumpMDA >> $@
{%-endif%}
{%-if case_dic.wave_glitch%}
	@echo fsdbDumpon +glitch >> $@
{%-endif%}
{%-endif%}
{%-endif%}
	@echo run >> $@

{%for file_name, file_line_lst in case_dic.file_dic|dictsort%}
.PHONY: ${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}}/{{file_name}}
${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}}/{{file_name}}:
	${dir_guard}
{%-for file_line in file_line_lst%}
{%-if loop.first%}
	@echo '{{file_line}}' > $@
{%-else%}
	@echo '{{file_line}}' >> $@
{%-endif%}
{%-endfor%}
{%endfor%}

.PHONY: verdi_{{case_dic.name}}__{{case_dic.seed}}
verdi_{{case_dic.name}}__{{case_dic.seed}}: ${OUTPUT_SIMV}/{{case_dic.simv}}/simv
	mkdir -p ${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}} && \
	cd ${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}} && \
	verdi {{case_dic.w_opts}} -simflow -simBin $< \
	-ssf ${MODULE_OUTPUT}/{{case_dic.name}}/{{case_dic.seed}}/{{case_dic.name}}__{{case_dic.seed}}.fsdb \
	-nologo &
